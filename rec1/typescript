Script started on 2019-01-28 16:15:55+01:00
]0;nat@terodde: /home/src/srcS/mulle-sde.github.io/rec1nat@terodde:/home/src/srcS/mulle-sde.github.io/rec1$ cd /tmp/
]0;nat@terodde: /tmpnat@terodde:/tmp$ mulle-sde init -d o[Kgoo[K[K[Kfoo -m mulle-sde/c-developer executable
[0;36m[1mInstalling project extensions in [0m[1m/tmp/foo[0;36m[1m[0m
[0;36m[1mRunning init script "/home/src/srcS/mulle-sde-developer/src/mulle-sde/sde/init"[0m
[0;36m[1mInstalled meta extension "mulle-sde/c-developer"[0m
[0;36m[1mInstalling project files for "mulle-sde/c-developer"[0m
[0;36m[1mEnter the environment:
   [0m[1mmulle-sde "foo"[0;36m[1m[0m
]0;nat@terodde: /tmpnat@terodde:/tmp$ mulle-sde status
[0;31m[1mThere is no mulle-sde project here[0m
]0;nat@terodde: /tmpnat@terodde:/tmp$ cd foo
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ m[Kls
[0m[01;34mcmake[0m  CMakeLists.txt  README.md  [01;34msrc[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde list
cmakefile/all: CMakeLists.txt
cmakefile/all: cmake/DependenciesAndLibraries.cmake
cmakefile/all: cmake/Headers.cmake
cmakefile/all: cmake/Sources.cmake
source/private-headers: src/include-private.h
source/public-headers: src/include.h
source/public-headers: src/version.h
source/sources: src/main.c
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde environment
[0;36m[1mEnvironment[0m
[0;36m[1m[0;35m[1mplugin[0m
ADDICTION_DIR="${MULLE_VIRTUAL_ROOT}/addiction"
BUILD_DIR="${MULLE_VIRTUAL_ROOT}/build"
DEPENDENCY_DIR="${MULLE_VIRTUAL_ROOT}/dependency"
MULLE_FETCH_ARCHIVE_DIR="${HOME:-/tmp}/.cache/mulle-fetch/archive"
MULLE_FETCH_MIRROR_DIR="${HOME:-/tmp}/.cache/mulle-fetch/git-mirror"
MULLE_FETCH_SEARCH_PATH="${MULLE_VIRTUAL_ROOT}/.."
MULLE_SDE_INSTALLED_VERSION="0.37.4"
MULLE_SOURCETREE_STASH_DIRNAME="stash"
MULLE_SOURCETREE_SYMLINK="YES"
[0;36m[1m[0;35m[1mproject[0m
PROJECT_DIALECT="c"
PROJECT_DOWNCASE_IDENTIFIER="foo"
PROJECT_EXTENSIONS="c"
PROJECT_IDENTIFIER="foo"
PROJECT_LANGUAGE="c"
PROJECT_NAME="foo"
PROJECT_SOURCE_DIR="src"
PROJECT_TYPE="executable"
PROJECT_UPCASE_IDENTIFIER="FOO"
[0;36m[1m[0;35m[1mextension[0m
MULLE_MATCH_FILENAMES="config:*.h:*.inc:*.c:CMakeLists.txt:*.cmake"
MULLE_MATCH_PATH="${PROJECT_SOURCE_DIR}:CMakeLists.txt:cmake"
MULLE_SDE_PROTECT_PATH="cmake/share"
MULLE_SDE_UPDATE_CALLBACKS="sourcetree:source"
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde tool
[0;36m[1mshare/tool-plugin[0m
[0;32mawk[0m
[0;32mbase64[0m
[0;32mbasename[0m
[0;32mbash[0m
[0;32mcat[0m
[0;32mchgrp[0m
[0;32mchmod[0m
[0;32mchown[0m
[0;32mclear[0m
[0;32mcolumn;optional[0m
[0;32mcp[0m
[0;32mcurl;optional[0m
[0;32mcut[0m
[0;32mdate[0m
[0;32mdd[0m
[0;32mdf[0m
[0;32mdirname[0m
[0;32mdmesg[0m
[0;32m[1mecho;builtin[0m
[0;32med;optional[0m
[0;32megrep[0m
[0;32memacs;optional[0m
[0;32menv[0m
[0;32mexpr[0m
[0;32m[1mfalse;builtin[0m
[0;32mfgrep[0m
[0;32mfind[0m
[0;32mgrep[0m
[0;32mhead[0m
[0;32mhostname[0m
[0;32m[1mkill;builtin[0m
[0;32mless[0m
[0;32mln[0m
[0;32mlogin[0m
[0;32mls[0m
[0;32mmake;optional[0m
[0;32mmkdir[0m
[0;32mmknod[0m
[0;32mmore[0m
[0;32mmount[0m
[0;32mmudo[0m
[0;32mmv[0m
[0;32mnano;optional[0m
[0;32mninja;optional[0m
[0;32mps[0m
[0;32m[1mpwd;builtin[0m
[0;32mreadlink[0m
[0;32mrm[0m
[0;32mrmdir[0m
[0;32msed[0m
[0;32msh[0m
[0;32msleep[0m
[0;32msort[0m
[0;32mstat[0m
[0;32mstty[0m
[0;32msu[0m
[0;31msw_vers;optional[0m
[0;32msync[0m
[0;32mtail[0m
[0;32mtee[0m
[0;32m[1mtest;builtin[0m
[0;32mtouch[0m
[0;32mtr[0m
[0;32m[1mtrue;builtin[0m
[0;32mumount[0m
[0;32muname[0m
[0;32muuidgen[0m
[0;32mvi;optional[0m
[0;32mwc[0m
[0;32mwget;optional[0m
[0;32mwhich[0m
[0;32mxargs;optional[0m
[0;31mxcodebuild;optional[0m
[0;31mxcrun;optional[0m

[0;36m[1mshare/tool-extension[0m
[0;32mmulle-cmake-graphviz-include;optional[0m
[0;32mmulle-create-build-motd;optional[0m
[0;32mgit;optional[0m
[0;32mgzip;optional[0m
[0;32mid;optional[0m
[0;32minotifywait;optional[0m
[0;32mssh;optional[0m
[0;32mtar;optional[0m
[0;32mtty;optional[0m
[0;32mzip;optional[0m
[0;32mmulle-sourcetree-to-c[0m
[0;32mmulle-match-to-cmake;optional[0m
[0;32mmulle-sourcetree-to-cmake;optional[0m
[0;32mcmake[0m

[0;36m[1mshare/tool-extension.linux[0m
[0;32mar[0m
[0;32mas[0m
[0;32mcc;optional[0m
[0;32mclang;optional[0m
[0;32mdiff[0m
[0;32mgcc;optional[0m
[0;32mld[0m
[0;32mnm[0m
[0;32mvalgrind;optional[0m
[0;32mvgdb;optional[0m
[0;32mvalgrind.bin;optional[0m

]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde status
[0;36m[1mThere is no sourcetree (/tmp/foo)[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ ,[Kmulle-sde dependency add --github mulle-c mulle-uit[K[Ktf
[0;36m[1mAdded [0;35m[1mmulle-utf[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ m,[Kull-[Ke-sourcetree list -r -u
address    url                                                         fetchoptions
-------    ---                                                         ------------
mulle-utf  https://github.com/mulle-c/mulle-utf/archive/latest.tar.gz   
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde fetch
[0;36m[1mFetching [0;35m[1mmulle-utf[0;36m[1m from [0m[1mhttps://github.com/mulle-c/mulle-utf/archive/latest.tar.gz[0;36m[1m.[0m
[0;36m[1mUsing cached "/home/nat/.cache/mulle-fetch/archive/mulle-utf-latest.tar.gz" for [0;35m[1mhttps://github.com/mulle-c/mulle-utf/archive/latest.tar.gz[0;36m[1m ...[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde sourcetree list -r -u
[0;91m[1mmulle-sde error:[0m[0;91m[1m Unknown command "sourcetree"[0m
Usage:
   mulle-sde [flags] [command] [options]

   The commandline IDE.

   Create a new project with `mulle-sde init` or enter an existing one with
   `mulle-sde <directory>`.

Flags:
   --style <val>  : see `mulle-env help` for style description
   -DKEY=VALUE    : define one-time environment variable
   -S             : search for enclosing environment
   -e             : bypass mulle-env check
   -f             : force operation
   -n             : dry run
   -s             : be silent
   -v             : be verbose (increase with -vv, -vvv)

Commands:
   bash-completion: get bash completion with `. $(mulle-sde bash-completion)`
   init           : create a new project
   show           : show available language and buildtool extensions
   status         : show information about the current directory
      (use mulle-sde -v help to show more commands)

   Options are command specific. Use mulle-sde <command> -h for help.
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde sourcetree list -r -u[1P[1P[1P[1P
address    url                                                         fetchoptions
-------    ---                                                         ------------
mulle-utf  https://github.com/mulle-c/mulle-utf/archive/latest.tar.gz   
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-s[K[K[K[K[K[K[Kls
[0m[01;34mcmake[0m  CMakeLists.txt  README.md  [01;34msrc[0m  [01;34mstash[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ ls stash/
[0m[01;34mmulle-utf[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ mulle-sde craft
[0;36m[1mUpdating [0;35m[1mfoo[0;36m[1m sourcetree[0m
[0;36m[1mUpdating [0;35m[1mfoo[0;36m[1m source[0m
[0;36m[1mUpdating [0;35m[1mfoo[0;36m[1m buildorder[0m
[0;36m[1mLet [0m[1mcmake[0;36m[1m do a [0;35m[1mDebug[0;36m[1m build of [0;35m[1mmulle-utf[0;36m[1m for SDK [0;35m[1mDefault[0;36m[1m in "build/.buildorder/Debug/mulle-utf" ...[0m
CMake Error at cmake/_Dependencies.cmake:66 (message):
  MULLE_ALLOCATOR_LIBRARY was not found
Call Stack (most recent call first):
  cmake/DependenciesAndLibraries.cmake:8 (include)
  cmake/share/Dependencies.cmake:13 (include)
  CMakeLists.txt:30 (include)


[0;31m[0m[0;36m[1mCheck the build log: [0m[1mbuild/.buildorder/Debug/mulle-utf/.log/cmake.log[0;36m[1m[0m
[0;91m[1mmulle-make fatal error:[0m[0;91m[1m cmake failed[0m
[0;36m[1mView logs with
[0m[1m   mulle-craft log mulle-utf[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ ls stash/fe[K[Kmulle-utf/
[0m[01;34mcmake[0m           [01;34mdox[0m      [01;34mmulle-project[0m              README.md        [01;34mresearch[0m  [01;34mtest[0m
CMakeLists.txt  LICENSE  mulle-utf.sublime-project  RELEASENOTES.md  [01;34msrc[0m       [01;34municode[0m
]0;nat@terodde: /tmp/foonat@terodde:/tmp/foo$ exit

Script done on 2019-01-28 16:18:21+01:00
